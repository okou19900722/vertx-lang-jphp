@includeNamed{"methods.templ"}
<?php \n
namespace @{type.raw.translatePackageName("jphp").replace(".", "\\")};\n
@code{
    var abs = type.abstract;
    var superClass = superType == null ? null : superType.raw.translatePackageName("jphp").replace(".", "\\") + "\\" + superType.simpleName;
    var use = superType != null && !superType.raw.packageName.equals(type.raw.packageName);

    import java.util.TreeSet;
    var importClassSet = new TreeSet();
    if(superType != null) {
    	addImport(superType);
    }
    for(property : properties) {
    	addImport(property.type);
    }
}

@foreach{importClass : importClassSet}
	use @{importClass.replace(".", "\\")};\n
@end{}
/**\n
@if{doc != null}
	@if{doc.firstSentence != null}
		@foreach{str : split(doc.firstSentence.value)}
		 * @{str}\n
		@end{}
	@end{}
	@if{doc.body != null}
		@foreach{str : split(doc.body.value)}
		 * @{str}\n
		@end{}
	@end{}
@end{}
 */
\n
@if{abs}abstract @end{}class @{type.simpleName} @if{superClass != null}extends @{superType.simpleName}@end{} \n
{ \n
    public function __construct($$@{type.getSimpleName(CASE_LOWER_CAMEL)} = null)\n
    { \n
        \n
    }\n
@code{


}
@foreach{property:properties}
@code{
    var propertyType = "";
    var propertyKind = property.kind;
    if(propertyKind.isValue) {
        propertyType = property.type.name;
    } else if(propertyKind.isList){
        propertyType = "java.util.List<" + property.type.name + ">";
    } else if(propertyKind.isSet){
        propertyType = "java.util.Set<" + property.type.name + ">";
    } else if(propertyKind.isMap){
        propertyType = "java.util.Map<" + property.type.name + ">";
    }
}
@if{property.adderMethod != null}
    @if{propertyKind.isMap}
    \n
    /**\n
     * @param $$key String \n
     * @param $$value String\n
     * @return $this\n
     */\n
    public function @{property.adderMethod}($$key, $$value) \n
    {\n
        return $this;\n
    }\n
    @else{}
    \n
    /**\n
     * @param $$@{property.name} @{join(genPHPDocType(property.type), "|", "", "")} \n
     * @return $this\n
     */\n
    public function @{property.adderMethod}($$@{property.name}) \n
    {\n
        return $this;\n
    }\n
    @end{}
@end{}
@if{property.getterMethod != null}
    \n
    /**\n
     * @return @{join(genPHPDocType(property.type), "|", "", "")} \n
     */\n
    public function @{property.getterMethod}()\n
    { \n
        return @{getReturnInfo(property.type)};\n
    }\n
@end{}
@if{property.setterMethod != null}
    \n
    /**\n
     * @param $$@{property.name} @{join(genPHPDocType(property.type), "|", "", "")} \n
     * @return $this\n
     */\n
    public function @{property.setterMethod}($$@{property.name})\n
    { \n
        return $this;\n
    }\n
@end{}
@end{}

}\n