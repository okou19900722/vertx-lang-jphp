@includeNamed{"methods.templ"}
@code{
	import java.util.TreeSet;
	var packageName = type.translatePackageName("jphp");
	var ifaceSimpleName = type.simpleName;
	var importClassSet = new TreeSet();
	importClassSet.add("io.vertx.lang.jphp.wrapper.DataObjectWrapper");
	importClassSet.add("php.runtime.env.Environment");
	importClassSet.add("io.vertx.lang.jphp.Utils");
	importClassSet.add("php.runtime.annotation.Reflection.Signature");
	importClassSet.add("php.runtime.Memory");
	importClassSet.add("io.vertx.core.json.JsonObject");
	importClassSet.add("org.develnext.jphp.zend.ext.json.JsonFunctions");
	importClassSet.add("io.vertx.lang.jphp.converter.TypeConverter");
	importClassSet.add("io.vertx.lang.jphp.converter.VertxGenVariable0Converter");
	importClassSet.add("io.vertx.lang.jphp.converter.EnumConverter");
	importClassSet.add("io.vertx.lang.jphp.converter.DataObjectConverter");

	def translateParamType(typeInfo){
		var typeKind = typeInfo.kind;
		if(typeKind.basic || typeKind == CLASS_ENUM) {
			return typeInfo.simpleName;
		} else {
			return "Memory";
		}
	}

	for(property : properties) {
		addImport(property.type);
	}
}

package @{packageName};\n

@foreach{importClass : importClassSet}
	import @{importClass};\n
@end{}

@SuppressWarnings("ALL")\n
public class @{ifaceSimpleName} extends DataObjectWrapper<@{type.name}>{\n
\n
    public @{ifaceSimpleName}(Environment env, @{type.name} wrappedObject){\n
        super(env, wrappedObject);\n
    }\n
	@if{!type.abstract}
		@if{hasEmptyConstructor}
		    @Signature\n
		    public Memory __construct(){\n
		        this.__wrappedObject = new @{type.name}();\n
		        return Memory.NULL;
		    }\n
		@end{}
	    @Signature\n
	    public Memory __construct(Memory memory) {\n
	        this.__wrappedObject = new @{type.name}(new JsonObject(JsonFunctions.json_encode(memory)));\n
	        return Memory.NULL;\n
		}\n
	@end{}

	@foreach{property : properties}
		@code{
			var getterMethod = property.getterMethod;
			var setterMethod = property.setterMethod;
			var adderMethod = property.adderMethod;
			var propertyType = property.type;
			var typeKind = propertyType.kind;
			var typeConverter = getTypeConverter(propertyType);
			var propertyTypeStr = propertyType.simpleName;
			var getterBody = "";
			var setterBody = "";
			var adderBody = "";
			var adderParamType = "";

			var simpleName = property.value ? "" : property.list ? "List" : property.set ? "Set" : "Map";
			if(!property.value) {
				getterBody = getterMethod == null ? getterBody : "Utils.convReturn" + simpleName + "(__ENV__, " + typeConverter + ", this.getWrappedObject()." + getterMethod + "())";
				setterBody = setterMethod == null ? setterBody : "this.getWrappedObject()." + setterMethod + "(Utils.convParam" + simpleName + "(__ENV__, " + typeConverter + ", " + property.name + "))";
				propertyTypeStr = "Memory";
			}

			if(property.value || adderMethod != null) {
				if(typeKind.basic) {
					if(property.value && getterMethod != null) {
						getterBody = "getWrappedObject()." + getterMethod + "()";
					}
					if(property.value && setterMethod != null) {
						setterBody = "getWrappedObject()." + setterMethod + "(" + property.name + ")";
					}
					if(adderMethod != null) {
						adderBody = "this.getWrappedObject()." + adderMethod + "(" + property.name + ")";
						adderParamType = propertyType.simpleName;
					}
				} else {
					propertyTypeStr = "Memory";
					adderParamType = propertyTypeStr;
					if(typeKind == CLASS_ENUM){
						getterBody = (!property.value || getterMethod == null) ? "" : "Utils.convReturnEnum(__ENV__, ";
						if(setterMethod != null || adderMethod != null) {
							var temp = "Utils.convParamEnum(__ENV__, " + propertyType.simpleName + ".class, ";
							setterBody = (!property.value || setterMethod == null) ? "" : temp;
							adderBody = adderMethod == null ? "" : temp;
						}
					} else {
						if(typeKind == CLASS_API){
							var typeParamSize = 0;
							var typeConverterStr = "";
							if(propertyType.isParameterized) {
								var args = propertyType.args;
								typeParamSize = args.size();
								foreach(arg : args) {
									typeConverterStr += ", " + getTypeConverter(arg);
								}
							}
							var typeParamInfo = "";
							if(propertyType.isParameterized) {
								var first = true;
								foreach(arg : propertyType.args) {
									if(!first) {
										typeParamInfo += ", ";
									} else {
										first = false;
									}
									if(arg.isVariable) {
										typeParamInfo += "Object";
									} else {
										var argKind = arg.kind;
										if(argKind == CLASS_API || argKind == CLASS_DATA_OBJECT) {
											typeParamInfo += arg.raw.packageName + "." + arg.raw.simpleName;
										} else {
											typeParamInfo += arg.raw.simpleName;
										}
									}
								}
							}
							var typeParamInfo2 = typeParamInfo == "" ? "" : "<" + typeParamInfo + ">";
							getterBody = (!property.value || getterMethod == null) ? getterBody : "Utils.<" + propertyType.raw.packageName + "." + propertyType.raw.simpleName + typeParamInfo2 + ", " + propertyType.raw.simpleName + typeParamInfo2 + (typeParamInfo == "" ? "" : ", ") + typeParamInfo + ">convReturnVertxGenVariable" + typeParamSize + "(__ENV__, " + propertyType.raw.simpleName + ".class, " + propertyType.raw.simpleName + "::__create" + typeConverterStr + ", ";
							if(setterMethod != null || adderMethod != null) {
								var temp = "Utils.<" + propertyType.raw.packageName + "." + propertyType.raw.simpleName + typeParamInfo2 + ", " + propertyType.raw.simpleName + typeParamInfo2 + (typeParamInfo == "" ? "" : ", ") + typeParamInfo + ">convParamVertxGenVariable" + typeParamSize + "(__ENV__, " + propertyType.raw.simpleName + ".class, " + propertyType.raw.simpleName + "::__create" + typeConverterStr + ", ";
								setterBody = (!property.value || setterMethod == null) ? setterBody : temp;
								adderBody = adderMethod == null ? adderBody : temp;
							}
						} else if(typeKind.json) {
							getterBody = (!property.value || getterMethod == null) ? getterBody : "Utils.convReturn" + propertyType.simpleName + "(__ENV__, ";
							if(setterMethod != null || adderMethod != null) {
								var temp = "Utils.convParam" + propertyType.simpleName + "(__ENV__, ";
								setterBody = (!property.value || setterMethod == null) ? setterBody : temp;
								adderBody = adderMethod == null ? adderBody : temp;
							}
						} else if(typeKind == CLASS_DATA_OBJECT) {
							var propertyCreator = propertyType.abstract ? "null, " : propertyType.name + "::new, ";
							getterBody = (!property.value || getterMethod == null) ? getterBody : "Utils.convReturnDataObject(__ENV__, " + propertyType.name + ".class, " + propertyType.simpleName + "::new, " + propertyCreator;
							if(setterMethod != null || adderMethod != null) {
								var temp = "Utils.convParamDataObject(__ENV__, " + propertyType.name + ".class, " + propertyType.name + "::new, " + propertyType.simpleName + "::new, ";
								setterBody = (!property.value || setterMethod == null) ? setterBody : temp;
								adderBody = adderMethod == null ? adderBody : temp;
							}
						} else if(typeKind == CLASS_OTHER) {
							getterBody = "error";
						} else {
							getterBody = "error";
						}
					}
					getterBody += (!property.value || getterMethod == null) ? "" : "this.getWrappedObject()." + getterMethod + "())";
					setterBody = (!property.value || setterMethod == null) ? setterBody : "this.getWrappedObject()." + setterMethod + "(" + setterBody + property.name + "))";
					adderBody = adderMethod == null ? adderBody : "this.getWrappedObject()." + adderMethod + "(" + adderBody + property.name + "))";
				}
			}
		}
		@if{property.adderMethod != null}
			\n
		    @Signature\n
			@if{property.map}
			    public Memory @{property.adderMethod}(String key, String value) {\n
			        this.getWrappedObject().${property.adderMethod}(key, value);\n
			        return toMemory();\n
			    }\n
			@else{}
			    public Memory @{property.adderMethod}(Environment __ENV__, @{adderParamType} @{property.name}){ \n
			        @{adderBody};\n
			        return toMemory();\n
				}\n
			@end{}
		@end{}

		@if{property.getterMethod != null}
			\n
		    @Signature\n
		    public @{propertyTypeStr} @{property.getterMethod}(Environment __ENV__) {\n
		        return @{getterBody};\n
		    }\n
		@end{}

		@if{property.setterMethod != null}
			\n
		    @Signature\n
		    public Memory @{property.setterMethod}(Environment __ENV__, @{propertyTypeStr} @{property.name}) {\n
		        @{setterBody};\n
		        return toMemory();\n
		    }\n
		@end{}
	@end{}

}\n